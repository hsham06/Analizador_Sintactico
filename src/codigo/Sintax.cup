package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Linea, Comillas, T_dato, Int, Cadena, If, Else, Do, While, For,
    Igual, Suma, Resta, Multiplicacion, Division, Op_logico, Op_relacional,
    Op_atribucion, Op_incremento, Op_booleano, Parentesis_a, Parentesis_c,
    Llave_a, Llave_c, Corchete_a, Corchete_c, Main, P_coma, Identificador, 
    ERROR , Mayor, Mayor_Igual, Menor, Menor_Igual, No_Igual;

terminal Integer  Numero;
non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, IF_ELSE,
    WHILE, DO_WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR;

start with INICIO;

INICIO ::=  If Parentesis_a SENTENCIA:sen Parentesis_c {: RESULT = sen; :}

;

SENTENCIA ::= Numero:n1 Mayor Numero:n2 {: RESULT = n1.intValue() > n2.intValue(); :}
                        | Numero:n1 Menor Numero:n2 {: RESULT = n1.intValue() < n2.intValue(); :}
			| Numero:n1 Mayor_Igual Numero:n2 {: RESULT = n1.intValue() >= n2.intValue(); :}
			| Numero:n1 Menor_Igual Numero:n2 {: RESULT = n1.intValue() <= n2.intValue(); :}
			| Numero:n1 Igual Numero:n2 {: RESULT = n1.intValue() == n2.intValue(); :}
			| Numero:n1 No_Igual Numero:n2 {: RESULT = n1.intValue() != n2.intValue(); :}
;